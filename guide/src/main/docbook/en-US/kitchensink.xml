<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>
<chapter id="kitchensink">

   <title>CDI + JSF + EJB + JTA + JAX-RS + JAX-RS + Arquilian: Kitchensink quickstart</title>
   
   <para>
      This quickstart shows off all the new features of Java EE 6, and makes a great starting
      point for your project
   </para>

   <para>
      Switch to the <literal>quickstarts/kitchensink</literal> directory and instruct Maven to build
      and deploy the application:
   </para>

   <programlisting><![CDATA[mvn install]]></programlisting> 

   <para>
      The quickstart uses a Maven plugin to deploy the application. The plugin requires JBoss AS to be
      running (you can find out how to start the server in <xref linkend="install.unix"/> or 
      <xref linkend="install.windows"/>).
   </para> 

   <para>
      or you can start the server using an IDE, like Eclipse.
   </para>

   <para>
      Now, check if the application has deployed properly by clicking 
      <ulink url="http://localhost:8080/jboss-as-kitchensink">http://localhost:8080/jboss-as-kitchensink</ulink>.
      If you see a splash page it's all working!
   </para>

   <note>
      <para>
         Should you wish to undeploy the quickstart, or redeploy after making some changes, it's pretty easy:
      </para>
      <itemizedlist>
         <listitem>
            <para>
               <literal>mvn jboss-as-deploy:redeploy</literal> - deploy any changes to the application to the application server
            </para>
         </listitem>
         <listitem>
            <para>
               <literal>mvn jboss-as-deploy:undeploy</literal> - undeploy the example from JBoss AS
            </para>
         </listitem>
      </itemizedlist>
   </note>
   
   <section id="kitchensink.eclipse">
      <title>Deploying the Kitchensink example using Eclipse</title>
      
      <para>
         You may choose to deploy the example using Eclipse. You'll need to have JBoss AS 7 started in Eclipse (as described
         in <xref linkend="install.eclipse" />) and to have imported the quickstarts into Eclipse (as described in 
         <xref linkend="import.eclipse"/>).         
      </para>
      
      <para>
         With the quickstarts imported, you can deploy the example by right clicking on the <literal>jboss-as-kitchensink</literal>
         project, and choosing <literal>Run As -> Run On Server</literal>:
      </para>
      
      <mediaobject>
         <imageobject>
            <imagedata fileref="images/Eclipse_KitchenSink_Deploy_1.jpg"
               format="JPEG" />
         </imageobject>
      </mediaobject>
      
      <para>
         Make sure the JBoss AS 7 server is selected, and hit <literal>Finish</literal>:
      </para>
      
      <mediaobject>
         <imageobject>
            <imagedata fileref="images/Eclipse_Deploy_2.jpg"
               format="JPEG" />
         </imageobject>
      </mediaobject>
      
      <para>
         You should see JBoss AS 7 start up (unless you already started it in <xref linkend="install.eclipse" />) and the application deploy in the
         Console log:
      </para>
      
      <mediaobject>
         <imageobject>
            <imagedata fileref="images/Eclipse_KitchenSink_Deploy_3.jpg"
               format="JPEG" />
         </imageobject>
      </mediaobject>
      
   </section>
      
   <para>
      It's time to pull the covers back and dive into the internals of the example application.
   </para>

   <section id="kitchensink.indepth">
      <title>The kitchensink example in depth</title>
      
      <para>TODO</para>
      
   </section>
   
   <!-- Additional configuration is required to get Eclipse to generate the JPA
 metamodel. The archetype includes the necessary Eclipse config files in your
 project. To enable this feature, right click on the project and select:

  Properties > Java Compiler > Annotation Processing

 Check "Enable annotation processing" then click OK and OK again when your are
 prompted to run a project build.

 This configuration is described in further detail in the Hibernate JPA documentation:

 - http://docs.jboss.org/hibernate/stable/jpamodelgen/reference/en-US/html_single/#d0e319
    -->
      

</chapter>
